<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aeb32e025e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aeb32c33b70"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aeb32c33b70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aeb32c2ee20"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2aeb32de8578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32e46a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb32e46a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e3c6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2aeb32df97d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32ffc020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb32ffc020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e3c6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2aeb32df4900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32ff6550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb32ff6550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e3c6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aeb32e03020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aeb32de0d18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aeb32de0d18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aeb32e175e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb32c310e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32e4a0c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aeb32dd7490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aeb32b35be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aeb32b35be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aeb32bf2c00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32dd7e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32c2d080"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb32c2d080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32c40020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb32dd6560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb32c310e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb32c3a020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb32dba7e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2aeb32c40d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32dba1b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2aeb32c406c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32e362d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2aeb32c406c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32c34558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32c34558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32c45020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb32c34be8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2aeb32c3acf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2aeb32c4b388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2aeb32c50e00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2aeb32c50e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32cd2740"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2aeb32c434f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2aeb32c34be8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2aeb32c82968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb32d6a970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2aeb32c6f4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33170710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2aeb32c814d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32d0dd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32d0dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331da710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2aeb32c871a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32d225b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32d225b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33254710"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2aeb32c5b1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32ce0a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32ce0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3304f710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2aeb32c7be00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32d242a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32d242a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33234710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2aeb32c594d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32ce8bd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32ce8bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330b46a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2aeb32c6a658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32cf7740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32cf7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33108710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2aeb32c6c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32d08430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32d08430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3318a710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2aeb32c7e968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1b120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331f5710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2aeb32c53968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32cd52a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32cd52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330416a8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2aeb32c64968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32ce4020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32ce4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330ab710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2aeb32c66af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32cf3bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32cf3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33121710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2aeb32c77e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32d058c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32d058c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33180710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2aeb32c84658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1ea50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3324b710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2aeb32c8e348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb32d80020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2aeb32c741a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0fa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331e0710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32cd2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33056710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2aeb32c60020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf0430"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330c1710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2aeb32c90020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb32d77ab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2aeb32c5e348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32cf9500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32cf9500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3310e6a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2aeb32c6e658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0a120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3316d710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2aeb32c80658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32d0ce18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32d0ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331d7710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2aeb32c86348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32d21740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32d21740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33251710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2aeb32c5a348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32cdfbd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32cdfbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3304c710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2aeb32c58658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32ce7d60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32ce7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330b1710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2aeb32c687e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32cf58c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32cf58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33105710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2aeb32c79af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32d075b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32d075b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33187710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2aeb32c7daf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32d1a2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32d1a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331f1710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2aeb32c52af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32cd4430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32cd4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3303e710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2aeb32c63af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32ce3120"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32ce3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330a8710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2aeb32c65c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf2d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf2d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3311d710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2aeb32c837e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32d2fbd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32d2fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33248710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2aeb32c70020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32cfbe40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32cfbe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331736a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2aeb32c73348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0ebd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331dd710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2aeb32c88020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32d23430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32d23430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33257710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2aeb32c8d4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb32d7b180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2aeb32c5c020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce18c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33052710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2aeb32c5f1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32cef5b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32cef5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330be710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2aeb32c7cc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32d251e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32d251e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb332376a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2aeb32c6b4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2aeb32cf85b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2aeb32cf85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3310b710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2aeb32c6d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32d092a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32d092a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3318d710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2aeb32c7f7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32d1c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32d1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331f8710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2aeb32c854d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32d208c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32d208c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3324e710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2aeb32c477d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32cd61e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32cd61e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33044520"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2aeb32c577e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2aeb32ce6e18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2aeb32ce6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330ae710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2aeb32c67968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2aeb32cf4a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2aeb32cf4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33124710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2aeb32c78c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2aeb32d06740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2aeb32d06740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb33184710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2aeb32c8f1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb32d73c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2aeb32c75020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2aeb32d10930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2aeb32d10930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb331e36a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2aeb32c72e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2aeb32d02e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2aeb32d02e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3311a710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2aeb32c51c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2aeb32cd35b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2aeb32cd35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb3303b710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2aeb32c62e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce22a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aeb330a5710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32b36728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32bf1b08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2aeb32bee020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2aeb32b3fdc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb32c127b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb32ef6268"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb32e362d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32e17020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aeb32e16ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2aeb32e18e10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aeb32e18e10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2aeb32c52af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aeb32e15e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2aeb32e38020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aeb32e38020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2aeb32c53968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aeb32e13020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2aeb32e371b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aeb32e371b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2aeb32c477d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e3c6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e4adb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e4adb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32fcd5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb32e4a0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32e588a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aeb32e56298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aeb32fda128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb32e588a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb32f691f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2aeb32fe3858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32f8dab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb32f88c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb32e671c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb32e671c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb32f69998"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb32fed330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb32e5e3b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb32e5e3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb32f66a90"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aeb32f66a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aeb3330d608"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aeb32f691f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aeb33312c70"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aeb32f69998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aeb33311478"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb33340710"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32ee2de8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aeb32ee2de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aeb32f000f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb3333b708"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb32ef2020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb32ef2020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb32efb160"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb3333a6c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aeb32ef0020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aeb32ef0020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aeb32efa190"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2aeb333368c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2aeb32eed228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2aeb32eed228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2aeb32ef6968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2aeb32f85cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32b36728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2aeb32fde930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32b36728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb32e6a3b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb32c99748" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb32c99a90" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb32c99dd8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb32c9a020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb32c9a388" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb32c9a6f0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2aeb32c9aa20" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2aeb32d27020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aeb32d27388" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aeb32d276f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2aeb32d27a20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2aeb32e6a3b0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb32e6a3b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2aeb32e6a6a0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2aeb32e77978" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2aeb32e77978"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2aeb32e77c68" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32e54c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32e54c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32f9ecc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32f9ecc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2aeb32f9b020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32fdc9f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32fdc9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2aeb32c310e0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb32c310e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c31430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aeb32c33b70" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb32c33b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb32c32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb32c3acf0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb32c3acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c390a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32c2d080" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32c2d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c2d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aeb32c3a020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb32c3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aeb32c3a370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aeb32c3a4f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aeb32c3a680"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aeb32c3a808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aeb32c3a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2aeb32c406c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2aeb32c406c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c40a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32c40020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32c40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c40370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2aeb32c40d88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2aeb32c40d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c3f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb32c34be8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb32c34be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb32c34558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32c34558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c348a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2aeb32c434f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2aeb32c434f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c43848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2aeb32c4b388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2aeb32c4b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c4b6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c4b860"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c4b9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c4bb70"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c4bcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c4be80"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c43030"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c431b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aeb32c45020" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32c45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32c45370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2aeb32c82968" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2aeb32c82968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c910f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c91278"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c91400"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c91588"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c91710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c91898"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c91a20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c91ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2aeb32c6f4d0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2aeb32c6f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6f820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c6fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c6fcb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c6fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c6e020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2aeb32c814d0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2aeb32c814d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c81820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c819a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c81b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c81cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c81e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c80020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c801a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2aeb32c871a0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2aeb32c871a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c874f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c87678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c87800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c87988"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c87b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c87c98"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c87e20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2aeb32c5b1a0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2aeb32c5b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5b678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5b988"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5bc98"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c5be20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2aeb32c7be00" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2aeb32c7be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c891a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c89330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c894b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c89640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c897c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c89950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c89ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c89c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2aeb32c594d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2aeb32c594d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c59820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c599a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c59b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c59cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c59e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c58020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c581a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2aeb32c6a658" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2aeb32c6a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c6acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c6ae40"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c681a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c68330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2aeb32c6c968" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2aeb32c6c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c79020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c791a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c79330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c794b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c79640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2aeb32c7e968" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2aeb32c7e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c7ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c7ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c7d1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c7d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c7d4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c7d640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2aeb32c53968" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2aeb32c53968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c53cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c53e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c52020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c521a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c52330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c524b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c52640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2aeb32c64968" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2aeb32c64968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c64cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c64e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c63020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c631a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c63330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c634b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c63640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2aeb32c66af0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2aeb32c66af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c66e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c65020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c65330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c65640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c657c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c65950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2aeb32c77e00" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2aeb32c77e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c761a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c76330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c764b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c76640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c767c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c76950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c76ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c76c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2aeb32c84658" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2aeb32c84658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c849a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c84b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c84cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c84e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c83020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c831a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c83330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2aeb32c8e348" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2aeb32c8e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c8e698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c8e820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c8e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c8eb30"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c8ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c8ee40"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c8d020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2aeb32c741a0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2aeb32c741a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c744f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c74678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c74800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c74988"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c74b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c74c98"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c74e20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2aeb32c50e00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2aeb32c50e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5d330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5d640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5d950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c5dad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c5dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2aeb32c60020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2aeb32c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c60370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c604f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c60680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c60808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c60990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c60b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c60ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c60e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2aeb32c90020" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2aeb32c90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c90370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c904f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c90680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c90808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c90990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c90b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c90ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c90e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2aeb32c5e348" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2aeb32c5e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5e698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5e820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5eb30"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5ee40"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6b020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2aeb32c6e658" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2aeb32c6e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c6ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c6ee40"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c6d1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6d330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2aeb32c80658" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2aeb32c80658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c809a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c80b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c80cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c80e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c7f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c7f1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c7f330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c7f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2aeb32c86348" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2aeb32c86348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c86698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c86820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c869a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c86b30"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c86cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c86e40"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c85020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2aeb32c5a348" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2aeb32c5a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5a698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5a820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5ab30"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5ae40"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c59020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2aeb32c58658" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2aeb32c58658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c589a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c58b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c58cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c58e40"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c57020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c571a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c57330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2aeb32c687e0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2aeb32c687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c68b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c68cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c68e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c67020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c67330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c674b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c67640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2aeb32c79af0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2aeb32c79af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c79e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c78020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c781a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c78330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c784b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c78640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c787c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c78950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2aeb32c7daf0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2aeb32c7daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c7de40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c7c020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c7c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c7c330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c7c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c7c640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c7c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c7c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2aeb32c52af0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2aeb32c52af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c52e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c51020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c511a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c51330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c514b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c51640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c517c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c51950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2aeb32c63af0" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2aeb32c63af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c62020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c621a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c62330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c624b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c62640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c627c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c62950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c62ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2aeb32c65c78" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2aeb32c65c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c72020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c721a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c72330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c724b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c72640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c727c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c72950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c72ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2aeb32c837e0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2aeb32c837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c83b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c83cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c83e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c82020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c82330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c824b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2aeb32c70020" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2aeb32c70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c70570"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c706f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c70880"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c70a08"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c70b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c70d18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6f020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2aeb32c73348" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2aeb32c73348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c73698"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c73820"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c739a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c73b30"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c73cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c73e40"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c81020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2aeb32c88020" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2aeb32c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c88370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c884f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c88680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c88808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c88990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c88b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c88ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c88e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2aeb32c8d4d0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2aeb32c8d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c8d820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c8d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c8db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c8dcb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c8de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c8c020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c8c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c8c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2aeb32c5c020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2aeb32c5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5c370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5c808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5cb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c5cca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c5ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2aeb32c5f1a0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2aeb32c5f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c5f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c5f678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c5f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c5f988"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c5fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c5fc98"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c5fe20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2aeb32c7cc78" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2aeb32c7cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c7b020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c7b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c7b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c7b4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c7b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c7b7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c7b950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c7bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2aeb32c6b4d0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2aeb32c6b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6b820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c6bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c6bcb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c6be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c6a020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2aeb32c6d7e0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2aeb32c6d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c6db30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c6dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c6de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c6c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c6c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c6c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c6c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2aeb32c7f7e0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2aeb32c7f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c7fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c7fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c7fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c7e020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c7e330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2aeb32c854d0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2aeb32c854d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c85820"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c859a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c85b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c85cb8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c85e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c84020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c841a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c84330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2aeb32c477d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2aeb32c477d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c47b20"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c47ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c47e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c53020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c53330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c534b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2aeb32c577e0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2aeb32c577e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c57b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c57cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c57e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c64020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c64330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c644b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c64640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2aeb32c67968" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2aeb32c67968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c67cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c67e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c66020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c661a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c66330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c664b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c66640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2aeb32c78c78" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2aeb32c78c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c77020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c771a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c77330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c774b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c77640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c777c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c77950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c77ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2aeb32c8f1a0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2aeb32c8f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c8f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c8f678"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c8f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c8f988"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c8fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c8fc98"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c8fe20"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2aeb32c75020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2aeb32c75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c75370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c754f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c75680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c75808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c75990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c75b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c75ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c75e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2aeb32c72e00" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2aeb32c72e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c711a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c71330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c71640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c71950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c71ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c71c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2aeb32c51c78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2aeb32c51c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c50020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c501a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c50330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c504b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c50640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c507c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c50950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c50ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2aeb32c62e00" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2aeb32c62e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32c611a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32c61330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32c614b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32c61640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32c617c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32c61950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32c61ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32c61c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32cd4430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32cd4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cd4780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cd4908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cd4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cd4c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cd4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cd3020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cd31a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cd3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32ce18c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce01a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce04b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce0640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32cd61e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32cd61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cd6538"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cd66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cd6848"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cd69d0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cd6b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cd6ce0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cd6e68"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32cd35b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32cd35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cd3908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cd3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cd3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cd3da0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cd21a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cd2330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cd24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32ce0a50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32ce0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cdf020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cdf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cdf330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cdf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cdf640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cdf7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cdf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32cd52a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32cd52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cd55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cd5780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cd5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cd5a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cd5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cd5da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cd4020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cd41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32cd2740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32cd2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cd2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cd2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cd2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce1020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce1330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce14b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32cdfbd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32cdfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cde020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cde1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cde330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cde4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cde640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cde7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cde950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cdead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33044520" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33044520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33044870"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330449f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33044b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33044d08"/>
        <function-ref name="get" scoped="" ref="0x2aeb33043020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330431a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb33043330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330434b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330416a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330416a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330419f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33041b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33041d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33040020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33040330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330404b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33040640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3303e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3303e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3303ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3303ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3303ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3303d020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3303d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3303d330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3303d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3303d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3303b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3303b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3303ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3303bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3303bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3303a020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3303a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3303a330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3303a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3303a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33056710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33056710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33056a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33056be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33056d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33054020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33054330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330544b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33054640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33052710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33052710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33052a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33052be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33052d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33051020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33051330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330514b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33051640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3304f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3304f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3304fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3304fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3304fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3304e020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3304e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3304e330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3304e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3304e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3304c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3304c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3304ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3304cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3304cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3304b020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3304b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3304b330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3304b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3304b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32ce6e18" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32ce6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce5330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce5640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce5950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32ce22a8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32ce22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce2780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce2a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce2da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf0020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32ce8bd0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32ce8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce7020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce74b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce77c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce7950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32ce4020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32ce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce4370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce4808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce4b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32cf0430" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf0780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf0908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf0c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cef020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32ce7d60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32ce7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce6260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce6570"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce6880"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce6a08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32ce3120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32ce3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32ce3470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32ce35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32ce3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32ce3908"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ce3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32ce3c18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ce3da0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32ce2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32cef5b8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32cef5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cef908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cefa90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cefc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cefda0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cee1a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cee330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330b46a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330b46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330b49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330b4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330b4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330b3020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330b3330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330b34b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330b1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330b1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330b1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330b1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330b0020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330b0330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330b04b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330b0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330ae710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330ae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330aea60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330aebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330aed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330ad020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330ad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330ad330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330ad4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330ad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330ab710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330ab710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330aba60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330abbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330abd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330aa020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330aa330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330a8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330a8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330a8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330a8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330a8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330a7020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330a7330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330a74b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330a5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330a5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330a5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330a5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330c3020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330c3330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330c1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330c1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330c1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330c1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330c0020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330c0330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330c04b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb330be710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb330be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb330bea60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb330bebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb330bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb330bd020"/>
        <function-ref name="get" scoped="" ref="0x2aeb330bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb330bd330"/>
        <function-ref name="set" scoped="" ref="0x2aeb330bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb330bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32cf7740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32cf7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf7a90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf7c18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf5020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf5330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf54b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32cf3bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32cf3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf2020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf24b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf27c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf2950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32cf9500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32cf9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf9850"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf99d8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf9b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf9ce8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf9e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf8020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf81a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32cf58c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32cf58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf5c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf5da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf41a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf44b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf4640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32cf2d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32cf2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d020d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d02260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d023e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d02570"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d026f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d02880"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d02a08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d02b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32cf85b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32cf85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf8908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf8da0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf71a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf7330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32cf4a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32cf4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cf4da0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cf3020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cf31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cf3330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cf34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cf3640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cf37c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cf3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32d02e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32d02e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d011a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d01330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d01640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d01950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d01ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d01c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3310e6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3310e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3310e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3310eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3310ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3310d020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3310d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3310d330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3310d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3310d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3310b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3310b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3310ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3310bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3310bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3310a020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3310a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3310a330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3310a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3310a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33108710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33108710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33108a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33108be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33108d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33107020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33107330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331074b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33107640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33105710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33105710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33105a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33105be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33105d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33126020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33126330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331264b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33126640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33124710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33124710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33124a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33124be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33124d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33123020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33123330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331234b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33123640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33121710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33121710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33121a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33121be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33121d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3311f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3311f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3311f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3311f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3311f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3311d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3311d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3311da60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3311dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3311dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3311c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3311c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3311c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3311c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3311c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3311a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3311a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3311aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3311abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3311ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33119020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33119330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331194b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33119640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32d0a120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d0a470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d0a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0a908"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0ac18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0ada0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32d075b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32d075b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d07908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d07a90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d07c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d07da0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d06020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d061a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d06330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d064b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32cfbe40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32cfbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32cfa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32cfa348"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32cfa4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32cfa658"/>
        <function-ref name="get" scoped="" ref="0x2aeb32cfa7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32cfa968"/>
        <function-ref name="set" scoped="" ref="0x2aeb32cfaaf0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32cfac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32d092a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32d092a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d095f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d09780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d09908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d09a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d09c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d09da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d08020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32d06740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32d06740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d06a90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d06c18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d06da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d05020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d05330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d054b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d05640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32d0b020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d0b370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d0b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0b808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0bb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0bca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d0be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32d08430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32d08430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d08780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d08908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d08a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d08c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d08da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d07020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d071a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d07330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32d058c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32d058c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d05c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d05da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d04020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d041a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d04330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d044b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d04640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331736a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331736a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331739f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33173b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33173d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33172020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33172330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331724b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33172640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33170710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33170710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33170a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33170be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33170d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3316f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3316f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3316f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3316f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3316f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3316d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3316d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3316da60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3316dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3316dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3316c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3316c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3316c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3316c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3316c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3318d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3318d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3318da60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3318dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3318dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3318c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3318c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3318c330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3318c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3318c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3318a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3318a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3318aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3318abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3318ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33189020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33189330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331894b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33189640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33187710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33187710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33187a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33187be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33187d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33186020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33186330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331864b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33186640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33184710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33184710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33184a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33184be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33184d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33182020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33182330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331824b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33182640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33180710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33180710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33180a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33180be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33180d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3317f020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3317f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3317f330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3317f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3317f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32d0ebd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32d0ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d0d020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d0d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0d4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0d950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d0dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32d1c020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32d1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d1c370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d1c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d1c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d1c808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d1c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d1cb18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d1cca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d1ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32d10930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32d10930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d10c80"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d10e08"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0f1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0f4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0f640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d0f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32d0dd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32d0dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d0c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d0c260"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0c570"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0c880"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0ca08"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d0cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32d1b120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d1b470"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d1b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d1b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d1b908"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d1ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d1bc18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d1bda0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32d0fa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32d0fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d0fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d0e020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d0e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d0e330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d0e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d0e640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d0e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d0e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32d0ce18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32d0ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d1d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d1d330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d1d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d1d640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d1d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d1d950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d1dad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d1dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32d1a2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32d1a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d1a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d1a780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d1a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d1aa90"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d1ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d1ada0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d19020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331e36a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331e36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331e39f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331e3b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331e3d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331e2020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331e2330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331e24b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331e0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331e0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331e0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331e0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331e0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331df020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331df330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331df4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331dd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331dda60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331ddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331dc020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331dc330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331da710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331daa60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331dabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331d9020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331d9330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331d94b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331d7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331d6020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331d6330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331f8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331f8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331f8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331f8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331f8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331f7020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331f7330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331f74b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331f5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331f5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331f5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331f5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331f3020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331f3330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331f34b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb331f1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb331f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb331f1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb331f1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb331f1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb331f0020"/>
        <function-ref name="get" scoped="" ref="0x2aeb331f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb331f0330"/>
        <function-ref name="set" scoped="" ref="0x2aeb331f04b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb331f0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2aeb32d23430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2aeb32d23430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d23780"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d23908"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d23a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d23c18"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d23da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d22020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d221a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2aeb32d208c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2aeb32d208c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d20c18"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d20da0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d1e1a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d1e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d1e4b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d1e640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d1e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2aeb32d251e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2aeb32d251e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d25538"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d256c0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d25848"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d259d0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d25b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d25ce0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d25e68"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2aeb32d225b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2aeb32d225b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d22908"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d22a90"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d22c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d22da0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d21020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d211a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d21330"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2aeb32d1ea50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2aeb32d1ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d1eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d2f020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d2f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d2f330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d2f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d2f640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d2f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d2f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2aeb32d242a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2aeb32d242a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d245f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d24780"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d24908"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d24a90"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d24c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d24da0"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d23020"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2aeb32d21740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2aeb32d21740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d21a90"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d21c18"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d21da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d20020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d20330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d204b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2aeb32d2fbd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2aeb32d2fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d2e020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d2e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d2e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d2e4b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d2e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d2e7c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d2e950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d2ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb332376a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb332376a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb332379f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33237b80"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33237d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33236020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33236330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332364b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33236640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33234710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33234710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33234a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33234be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33234d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33233020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33233330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332334b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33233640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33257710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33257710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33257a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33257be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33257d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33256020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33256330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332564b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33256640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33254710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33254710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33254a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33254be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33254d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33253020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33253330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332534b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33253640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33251710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33251710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33251a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33251be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33251d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33250020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33250330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332504b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33250640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3324e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3324e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3324ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3324ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3324ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3324d020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3324d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3324d330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3324d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3324d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb3324b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb3324b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb3324ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb3324bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb3324bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb3324a020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3324a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb3324a330"/>
        <function-ref name="set" scoped="" ref="0x2aeb3324a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb3324a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb33248710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb33248710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb33248a60"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb33248be8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb33248d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb33246020"/>
        <function-ref name="get" scoped="" ref="0x2aeb332461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb33246330"/>
        <function-ref name="set" scoped="" ref="0x2aeb332464b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb33246640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d28ac0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d28ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d28e10"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d48020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d481a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d48330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d484b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d48640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d487c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d48950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d44db8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d44db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d43170"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d432f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d43480"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d43608"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d43790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d43918"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d43aa0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d43c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d513e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d513e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d51730"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d518b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d51a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d51bc8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d51d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d50020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d501a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d50330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d4c7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d4c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d4cb38"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d4ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d4ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d4b020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d4b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d4b330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d4b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d4b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d59c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d59c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d58020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d581a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d58330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d584b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d58640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d587c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d58950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d58ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d54020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d54370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d544f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d54680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d54808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d54990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d54b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d54ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d54e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d61480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d61480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d617d0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d61958"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d61ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d61c68"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d61df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d60020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d601a8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d6e7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d6e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d6eb38"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d6ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d6ee48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d6d020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d6d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d6d330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d6d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d6d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d6a970" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d6a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d6acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d6ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d69020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d691a8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d69330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d694b8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d69640"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d77ab0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d77ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d77e00"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d76020"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d76330"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d76640"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d767c8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d76950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d73c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d73c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d71020"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d71330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d714b8"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d71640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d717c8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d71950"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d80020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d80370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d804f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d80680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d80808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d80990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d80b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d80ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d80e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aeb32d7b180" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2aeb32d7b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32d7b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32d7b658"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32d7b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32d7b968"/>
        <function-ref name="get" scoped="" ref="0x2aeb32d7baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32d7bc78"/>
        <function-ref name="set" scoped="" ref="0x2aeb32d7be00"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32d7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32dba1b8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32dba1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aeb32b2e6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aeb32b2e6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32dba508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aeb32dba7e8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aeb32dba7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aeb32dbab38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aeb32dbacc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aeb32dbae48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aeb32db9020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aeb32db91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2aeb32dd6560" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aeb32dd6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32dd68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aeb32c2ee20" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb32c2ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb32dd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2aeb32dd7e68" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aeb32dd7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32dd61e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2aeb32dd7490" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb32dd7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32dd77e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb32dd7968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb32dd7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aeb32b36728" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32b36728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb32b36a78"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb32b36c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aeb32b35be8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb32b35be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32b2d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb32b2d1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb32b2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aeb32bf1b08" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aeb32bf1b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb32bf1e58"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb32bef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2aeb32bee020" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aeb32bee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aeb32bee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aeb32bf2c00" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aeb32bf2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32bf1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aeb32bf11a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aeb32bf1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2aeb32c127b8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb32c127b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aeb32c12b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2aeb32b3fdc8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aeb32b3fdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aeb32c08170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2aeb32c13240" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aeb32c13240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aeb32c13590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2aeb32de8578" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2aeb32de8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32de68f0"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32dde020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32dded10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32dde8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32df91c0"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32de6d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32dde470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32ddf0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32de6320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32ddf598"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32ddfa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aeb32e025e8" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aeb32e025e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aeb32e02938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2aeb32df97d8" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2aeb32df97d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32df5a18"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32df7158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32df7e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32df79f8"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32df42e8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32df5e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32df75a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32df8370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32df5448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32df8810"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32df8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aeb32e03020" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb32e03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb32e03370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb32e034f8"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb32e03680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb32e03808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb32e03990"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e03b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb32e03ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb32e02330"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e03e28"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb32e02020"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb32e021a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2aeb32df4900" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2aeb32df4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32df0bc0"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32df2278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32df0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32df2b18"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32e044d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32e04088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32df26c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32df3490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32df05f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32df3930"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32df3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aeb32de0d18" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb32de0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb32e050a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb32e05228"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb32e053b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb32e05538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb32e056c0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e05848"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb32e059d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb32e1a020"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e05b58"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb32e05ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb32e05e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2aeb32e16ce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aeb32e16ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e150a0"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e15228"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e153b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e15538"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e156c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e15848"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e159d0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e15b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32e17020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32e17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32e17370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2aeb32e15e70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aeb32e15e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e141e8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e14370"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e144f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e14680"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e14808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e14990"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e14b18"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e14ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aeb32e175e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aeb32e175e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aeb32e17938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aeb32e17ac0"/>
        <function-ref name="led1On" scoped="" ref="0x2aeb32e17c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aeb32e17dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aeb32e16020"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e161a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aeb32e16330"/>
        <function-ref name="led2Off" scoped="" ref="0x2aeb32e16950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e164b8"/>
        <function-ref name="led0On" scoped="" ref="0x2aeb32e16640"/>
        <function-ref name="led2On" scoped="" ref="0x2aeb32e167c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2aeb32e13020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aeb32e13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e13370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e134f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e13680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e13808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e13990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e13b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e13ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e13e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2aeb32e18e10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aeb32e18e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e391a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e39330"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e394b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e39640"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e397c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e39950"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e39ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e39c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2aeb32e38020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aeb32e38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e38370"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e384f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e38680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e38808"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e38990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e38b18"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e38ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e38e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2aeb32e362d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32e362d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32e36628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2aeb32e371b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aeb32e371b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aeb32e37500"/>
        <function-ref name="isInput" scoped="" ref="0x2aeb32e37688"/>
        <function-ref name="toggle" scoped="" ref="0x2aeb32e37810"/>
        <function-ref name="isOutput" scoped="" ref="0x2aeb32e37998"/>
        <function-ref name="get" scoped="" ref="0x2aeb32e37b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aeb32e37ca8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32e37e30"/>
        <function-ref name="clr" scoped="" ref="0x2aeb32e36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32e46a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32e46a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32fffd60"/>
        <function-ref name="fired" scoped="" ref="0x2aeb33000470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32fff1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb33000d10"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32ffe648"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32ffe1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb330008c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb33002620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32fff790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb33002ac0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb33000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aeb32e3c6a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e3c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32e4fa18"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32e50158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32e50e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32e509f8"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32e4e2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32e4fe68"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32e505a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32e51370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32e4f448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32e51810"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32e51cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aeb32e4adb8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2aeb32e4adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32e5b088"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32e48708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32e5c470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32e5c020"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32e5b928"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32e5b4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32e48b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32e49930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32e5ca40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32e49dd0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32e482b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb32e56298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb32e56298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb32e56e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32e4a0c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32e4a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32e4a410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2aeb32e5e3b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2aeb32e5e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb32e5d130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb32e5da40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb32e5d5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb32e6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32e588a8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32e588a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32e58bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2aeb32e671c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2aeb32e671c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32e60918"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32e61980"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb32e60310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32e61e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb32e60da0"/>
        <function-ref name="start" scoped="" ref="0x2aeb32e61020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32e614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb32f69998" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb32f69998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32f66020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32f670c0"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb32f679d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32f67548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb32f664a8"/>
        <function-ref name="start" scoped="" ref="0x2aeb32f68730"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32f68c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb32f691f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb32f691f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2aeb32b2e388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2aeb32b2e388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb32f69540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb32f66a90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb32f66a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb32f64828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb32f63190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb32f64cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb32f63618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2aeb3333b708" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb3333b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2aeb3333ba58"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb3333bbe0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb3333bd68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb3333a020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb3333a1a8"/>
        <function-ref name="setControl" scoped="" ref="0x2aeb3333a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aeb33311478" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb33311478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb3330fb18"/>
        <function-ref name="fired" scoped="" ref="0x2aeb33310b80"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb3330f510"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb3330f088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb3330d020"/>
        <function-ref name="start" scoped="" ref="0x2aeb33310220"/>
        <function-ref name="stop" scoped="" ref="0x2aeb333106f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aeb33312c70" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aeb33312c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aeb33311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aeb3330d608" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb3330d608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb3330c3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb3330ccb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb3330c830"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb33340190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2aeb333368c0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb333368c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2aeb33336c10"/>
        <function-ref name="compareBusy" scoped="" ref="0x2aeb33336d98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2aeb33335020"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb333351a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb33335330"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb333354b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2aeb3333a6c0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb3333a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb33336020"/>
        <function-ref name="fired" scoped="" ref="0x2aeb33339d08"/>
        <function-ref name="get" scoped="" ref="0x2aeb333393a8"/>
        <function-ref name="reset" scoped="" ref="0x2aeb333371f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb333364a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb33339830"/>
        <function-ref name="start" scoped="" ref="0x2aeb33337680"/>
        <function-ref name="stop" scoped="" ref="0x2aeb33337b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aeb33340710" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb33340710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb3333c930"/>
        <function-ref name="test" scoped="" ref="0x2aeb3333c020"/>
        <function-ref name="get" scoped="" ref="0x2aeb3333f3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb3333cdb8"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb3333b2f0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb3333d1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb3333fd08"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb3333c4a8"/>
        <function-ref name="set" scoped="" ref="0x2aeb3333f830"/>
        <function-ref name="start" scoped="" ref="0x2aeb3333d680"/>
        <function-ref name="stop" scoped="" ref="0x2aeb3333db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb32ef2020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb32ef2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2aeb32ef2370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb32ef24f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb32ef2680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb32ef2808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb32ef2990"/>
        <function-ref name="setControl" scoped="" ref="0x2aeb32ef2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2aeb32eed228" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb32eed228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2aeb32eed578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2aeb32eed700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2aeb32eed888"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb32eeda10"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb32eedb98"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb32eedd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aeb32ef0020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb32ef0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb32eee7a8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32eef560"/>
        <function-ref name="get" scoped="" ref="0x2aeb32ef0ba0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb32eef9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb32eeec30"/>
        <function-ref name="set" scoped="" ref="0x2aeb32eef088"/>
        <function-ref name="start" scoped="" ref="0x2aeb32eefe70"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32eee320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32ee2de8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32ee2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb32ef30f8"/>
        <function-ref name="test" scoped="" ref="0x2aeb32ef4798"/>
        <function-ref name="get" scoped="" ref="0x2aeb32edfa18"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb32ef3580"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb32ef3a58"/>
        <function-ref name="reset" scoped="" ref="0x2aeb32ede980"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb32ede4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb32ef4c20"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ede020"/>
        <function-ref name="start" scoped="" ref="0x2aeb32edee08"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32ef4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2aeb32efb160" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2aeb32efb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2aeb32efb4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2aeb32efb638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2aeb32efb7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2aeb32efb948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2aeb32efbad0"/>
        <function-ref name="setControl" scoped="" ref="0x2aeb32efbc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aeb32ef6268" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aeb32ef6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aeb32ef65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2aeb32ef6968" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2aeb32ef6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2aeb32ef6cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2aeb32ef6e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2aeb32f0e020"/>
        <function-ref name="countBusy" scoped="" ref="0x2aeb32f0e1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2aeb32f0e330"/>
        <function-ref name="setAssr" scoped="" ref="0x2aeb32f0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aeb32efa190" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aeb32efa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2aeb32ef8930"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32ef96d0"/>
        <function-ref name="get" scoped="" ref="0x2aeb32efad10"/>
        <function-ref name="reset" scoped="" ref="0x2aeb32ef9b58"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb32ef8db8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32ef91f8"/>
        <function-ref name="start" scoped="" ref="0x2aeb32ef8020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32ef84a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32f000f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32f000f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2aeb32efd270"/>
        <function-ref name="test" scoped="" ref="0x2aeb32efe930"/>
        <function-ref name="get" scoped="" ref="0x2aeb32f00c78"/>
        <function-ref name="setScale" scoped="" ref="0x2aeb32efd6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2aeb32efdbd0"/>
        <function-ref name="reset" scoped="" ref="0x2aeb32effa90"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb32eff608"/>
        <function-ref name="isOn" scoped="" ref="0x2aeb32efedb8"/>
        <function-ref name="set" scoped="" ref="0x2aeb32eff130"/>
        <function-ref name="start" scoped="" ref="0x2aeb32efe020"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32efe4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2aeb32f85cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2aeb32f85cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb32f9f0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb32f9f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aeb32f88c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aeb32f88c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32f85410"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32f864a8"/>
        <function-ref name="startAt" scoped="" ref="0x2aeb32f86db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32f86930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aeb32f85898"/>
        <function-ref name="start" scoped="" ref="0x2aeb32f879f0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32f86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32f8dab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32f8dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32f8ad60"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32f8b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32f8a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32f8bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32f88648"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32f881f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32f8b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32f8c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32f8a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32f8cac0"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32f8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2aeb32fde930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2aeb32fde930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aeb32fdec80"/>
        <function-ref name="runTask" scoped="" ref="0x2aeb32fdee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2aeb32fe3858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2aeb32fe3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32fe0bc0"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32fe11c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32fe0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32fe1a60"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32fde4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32fde088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32fe1610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32fe23d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32fe05f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32fe2878"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32fe2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32fcd5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32fcd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32fe5988"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32fcb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32fcbd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32fcb900"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32fe32d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32fe5df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32fcb490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32fcc198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32fe5398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32fcc658"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32fccb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aeb32fda128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aeb32fda128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb32fdaca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aeb32fed330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aeb32fed330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aeb32fec0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aeb32fec9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aeb32fec548"/>
        <function-ref name="overflow" scoped="" ref="0x2aeb32fece58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32ffc020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32ffc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb32ff82b8"/>
        <function-ref name="fired" scoped="" ref="0x2aeb32ffa978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb32ff96c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb32ff9278"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb32ff8b58"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb32ff8708"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb32ffadc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb32ffcb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb32ff9c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb32ffa088"/>
        <function-ref name="stop" scoped="" ref="0x2aeb32ffa528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aeb32ff6550" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aeb32ff6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aeb32bb4608"/>
            <typename><typedef-ref name="TMilli" ref="0x2aeb32bb4960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aeb3300f768"/>
        <function-ref name="fired" scoped="" ref="0x2aeb33011e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aeb33010b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aeb33010728"/>
        <function-ref name="getdt" scoped="" ref="0x2aeb3300e088"/>
        <function-ref name="gett0" scoped="" ref="0x2aeb3300fbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aeb330102d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aeb330110c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aeb3300f198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aeb33011560"/>
        <function-ref name="stop" scoped="" ref="0x2aeb33011a00"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aeb32c32bf0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb32b3a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2aeb32c337b0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2aeb32c36b30" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb32247b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2aeb32c368c0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2aeb32c38328" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aeb32247b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2aeb32c38d20" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aeb32c38ab0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2aeb32c377d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aeb32c37560" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2aeb32c36070" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2aeb32c4eab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2aeb32c4d1d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2aeb32c4fd20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2aeb32c4b020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb32c4e400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2aeb32c4d890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb32c4f020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2aeb32c4f690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aeb32b29968" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2aeb32b35878" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2aeb32b350d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2aeb32b37608" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aeb32b3a1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2aeb32b37df8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2aeb32befca0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2aeb32c12328" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2aeb32b94940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2aeb32c08e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32ddd370" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32ddd370"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aeb32de9020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb32dee710" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2aeb32dec5b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb32dec020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aeb32dec338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2aeb32ded7b8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2aeb32de8020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2aeb32de9740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aeb32ded020" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2aeb32ddde40" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb32dddbd0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2aeb32deb5b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb32deb020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aeb32deb338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2aeb32ddc8a0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb32ddc630" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb32dee070" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2aeb32dfe428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2aeb32dfeb60" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2aeb32dfc328" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2aeb32dfb1d8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2aeb32dfa810" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb32e0f020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2aeb32dfca40" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb32e0fb20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2aeb32e0f8b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2aeb32dffcd8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2aeb32dfb948" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2aeb32dfa0d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32e57518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32e57518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aeb32e57da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aeb32248608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32e5fa50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32e5fa50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb32e5fc80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e5fc80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aeb32e70548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e5fc80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aeb32e6f590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aeb32e70d60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aeb32e6fc80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aeb32e53738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aeb32e53738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aeb32e53968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aeb32e62290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb32e64418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2aeb32e63920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aeb32e63380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2aeb32e636a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aeb32e64b88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2aeb32e62a10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb32e664a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aeb32e66238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e53968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb32e66c78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2aeb32e8c110" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc1a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2aeb32bc1e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2aeb32ea14c0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bce100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2aeb32bce508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2aeb32e8a328" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc6980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2aeb32bc6d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2aeb32e8ace0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2aeb32bc6d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2aeb32e8aa70" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2aeb32bc6d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2aeb32ea1e78" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bce100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2aeb32bce508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2aeb32ea1c08" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bce100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2aeb32bce508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2aeb32e8cae0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc1a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2aeb32bc1e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aeb32e8c870" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc1a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2aeb32bc1e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2aeb32eabc30" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2aeb32eaa450" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2aeb32eab528" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2aeb32eaac00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2aeb32ead378" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc8118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2aeb32bc8520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2aeb32eadd28" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2aeb32bc8520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2aeb32eadab8" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2aeb32bc8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2aeb32bc8520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2aeb32e8e5b8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e8e5b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2aeb32e9bc50" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aeb32e9c020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb32e8ee70" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e8e5b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aeb32e9c728" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aeb32e9a3e0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb32e9e7e0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e8e5b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb32e9e570" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aeb32e8e5b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb32e9ce20" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb32e9b538" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2aeb32e83870" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb32e83870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2aeb32e93020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aeb32e94020" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aeb32e80178" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb32e83870"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2aeb32e93970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2aeb32e93700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2aeb32e92178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aeb32247160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aeb32e7f978" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aeb32e7f258" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aeb32e94778" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aeb32b279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aeb32e80ab0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb32e83870"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2aeb32e80840" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2aeb32e83870"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aeb32e7e0d8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aeb32e7e7c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
